version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: zhiqing_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-zhiqing123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-zhiqing_db}
      MYSQL_USER: ${MYSQL_USER:-zhiqing_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-zhiqing123}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./ddl:/docker-entrypoint-initdb.d
    networks:
      - zhiqing_network
    command: --default-authentication-plugin=mysql_native_password

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: zhiqing_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zhiqing_network
    command: redis-server --appendonly yes

  # Django后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zhiqing_backend
    restart: unless-stopped
    environment:
      - DEBUG=${DEBUG:-False}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DB=${MYSQL_DATABASE:-zhiqing_db}
      - MYSQL_USER=${MYSQL_USER:-zhiqing_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-zhiqing123}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "8000:8000"
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    depends_on:
      - mysql
      - redis
    networks:
      - zhiqing_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Vue前端服务
  frontend:
    build:
      context: ./zhiqing_ui
      dockerfile: Dockerfile
    container_name: zhiqing_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - zhiqing_network

  # Nginx反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    container_name: zhiqing_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./deploy/nginx-frontend.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - zhiqing_network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  zhiqing_network:
    driver: bridge
